	------------------------------------------------
저장시간 - 2022-03-14 오후 11:57:45 월요일
//-------------------------------------------------------------------------------------------------
//                                                            1주 2일차                       
//
//공부할 내용 - C++ 입출력
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<string>			// C++의 핵심 클래스 
#include"save.h"

using namespace std;
// [문제] 구구단을 출력하는 프로그램을 작성하라.
// 몇 단을 출력할 것인지 입력받고 그 단을 화면에 출력하면 된다.
int main()
{	
	cout << "출력할 구구단을 입력하시오.:";
	int number = 0 ;
	int result = 0;
	cin >> number;
	for (int i = 1; i < 10; i++)
	{
		result = number * i;
		cout << number << " * " << i << " = " << result << endl;
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오전 12:00:32 화요일
//-------------------------------------------------------------------------------------------------
//                                                            1주 2일차                       
//
//공부할 내용 - C++ 입출력
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<string>			// C++의 핵심 클래스 
#include"save.h"

using namespace std;
// [문제] 구구단을 출력하는 프로그램을 작성하라.
// 몇 단을 출력할 것인지 입력받고 그 단을 화면에 출력하면 된다.
int main()
{	
	cout << "구구단을 출력합니다.:" << endl;
	cout << " 몇 단을 출력할까요?";
	int number{ }; // int 를 기본값(0)으로 초기화.
	int result{ };
	cin >> number;
	for (int i = 1; i < 10; i++)
	{
		result = number * i;
		cout << number << " * " << i << " = " << result << endl;
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오전 12:11:35 화요일
//-------------------------------------------------------------------------------------------------
//                                                            1주 2일차                       
//
//공부할 내용 - 자료형과 변수
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<string>			// C++의 핵심 클래스 
#include"save.h"

using namespace std;
// [문제] C++언어에서 미리 정의한 자료형 int의 메모리 크기를 알아보자.
int main()
{	
	int x{  };
	cout << sizeof(x) << endl;
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오전 12:12:15 화요일
//-------------------------------------------------------------------------------------------------
//                                                            1주 2일차                       
//
//공부할 내용 - 자료형과 변수
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<string>			// C++의 핵심 클래스 
#include"save.h"

using namespace std;
// [문제] C++언어에서 미리 정의한 자료형 int의 메모리 크기를 알아보자.
int main()
{	

	cout << "int의 메모리 크기는 - " << sizeof( int ) << endl;
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오전 12:17:41 화요일
//-------------------------------------------------------------------------------------------------
//                                                            1주 2일차                       
//
//공부할 내용 - 자료형과 변수
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<string>			// C++의 핵심 클래스 
#include"save.h"

using namespace std;
// [문제] C++언어에서 미리 정의한 자료형 int의 메모리 크기를 알아보자.
int main()
{	
	int n{ 0x7fffffff};
	cout << "int의 메모리 크기는 - " << sizeof( int ) << endl;

	cout << " 가장 큰 값 - " << n << endl;
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오전 12:18:11 화요일
//-------------------------------------------------------------------------------------------------
//                                                            1주 2일차                       
//
//공부할 내용 - 자료형과 변수
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<string>			// C++의 핵심 클래스 
#include"save.h"

using namespace std;
// [문제] C++언어에서 미리 정의한 자료형 int의 메모리 크기를 알아보자.
int main()
{	
	int n{ 0x7fffffff};
	cout << "int의 메모리 크기는 - " << sizeof( int ) << endl;

	cout << " 가장 큰 값 - " << n << endl;
	cout << " 가장 작은 값 - " << n + 1 << endl;
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오전 12:20:55 화요일
//-------------------------------------------------------------------------------------------------
//                                                            1주 2일차                       
//
//공부할 내용 - 자료형과 변수
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<string>			// C++의 핵심 클래스 
#include"save.h"
// [ 문제 ] int의 최대값과 최소값을 출력하라.
using namespace std;
int main()
{	
	cout << "int의 최대값 - " << numeric_limits<int>::max() << endl;
	cout << "int의 최소값 - " << numeric_limits<int>::min() << endl;
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 4:38:25 화요일
//-------------------------------------------------------------------------------------------------
//                                                            1주 2일차                       
//
//공부할 내용 - 자료형과 변수
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<string>			// C++의 핵심 클래스 
#include"save.h"
// [ 문제 ] int의 최대값과 최소값을 출력하라.
using namespace std;
int main()
{	
	cout << "int의 최대값 - " << numeric_limits<int>::max() << endl;
	cout << "int의 최소값 - " << numeric_limits<int>::min() << endl;
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 4:52:27 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

// [ 문제 ] 

int main()
{	
	// 어떻게 설명하면 좋은가?
	int num;
	// int에서 정해진 크기만큼 메모리를 확보해 주세요.
	//앞으로는 num 이라는 이름으로 메모리를 읽고 사용하겠습니다 라고해석

	num = 10;

	cout << num << endl;
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 4:59:38 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

// [ 문제 ] 

int main()
{	
	//값을 초기화 할 수 있다.
	int num = 0;
	
	cout << num << endl;

	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:00:16 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

// [ 문제 ] 

int main()
{	
	//값을 초기화 할 수 있다.
	// initialization  - 메모리를 할당하면서 값을 쓰는 특별한 동작
	int num = 0;
	
	num = 33;
	
	cout << num << endl;

	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:01:32 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

// [ 문제 ] 

int main()
{	
	//값을 초기화 할 수 있다.
	// initialization  - 메모리를 할당하면서 값을 쓰는 특별한 동작
	//c++에서 초기화는 여러가지 방법으로 할 수 있는데
	// 앞으로는 uniform initialization을 사용하자.
	int num{ 123 };

	cout << num << endl;

	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:02:42 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

// [ 문제 ] 

int main()
{	
	//값을 초기화 할 수 있다.
	// initialization  - 메모리를 할당하면서 값을 쓰는 특별한 동작
	//c++에서 초기화는 여러가지 방법으로 할 수 있는데
	// 앞으로는 uniform initialization을 사용하자.
	int num{ 123 };
	char;
	double;

	cout << sizeof(double) << endl;
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:02:54 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

// [ 문제 ] 

int main()
{	
	//값을 초기화 할 수 있다.
	// initialization  - 메모리를 할당하면서 값을 쓰는 특별한 동작
	//c++에서 초기화는 여러가지 방법으로 할 수 있는데
	// 앞으로는 uniform initialization을 사용하자.
	int num{ 123 };
	char;
	double;

	cout << sizeof(float) << endl;
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:07:05 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

int num{ 123 };

int main()
{	
	int num{ 456 };
	cout << num << endl;
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:31:38 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
// 
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;


int main()
{	
	int num[ 10 ];

	// num 에 저장된 값을 출력해보고 지역변수가 어떻게 만들어 지는 것을 알아보자
	// num은 int 10개가 저장된 메모리를 나타낸다.

	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:32:29 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
// 
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;


int main()
{	
	int num[ 10 ];
	
	// [문제] num에 저장된 정수 10개를 출력하라.
	for (int i  = 0; i < 10; i++)
	{
		cout << num[i] << endl;
	}

	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:33:48 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
// 
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

	int num[ 10 ];

int main()
{	
	
	// [문제] num에 저장된 정수 10개를 출력하라.
	for (int i  = 0; i < 10; i++)
	{

		cout << num[i] << endl;
	}

	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:34:50 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
// 
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;


int main()
{	
	
	int num[10]{ };
	// [문제] num에 저장된 정수 10개를 출력하라.
	for (int i  = 0; i < 10; i++)
	{

		cout << num[i] << endl;
	}

	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:35:11 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
// 
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;


int main()
{	
	
	int num[10]{ 0  };
	// [문제] num에 저장된 정수 10개를 출력하라.
	for (int i  = 0; i < 10; i++)
	{

		cout << num[i] << endl;
	}

	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:35:21 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
// 
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;


int main()
{	
	
	int num[10]{ 7 };
	// [문제] num에 저장된 정수 10개를 출력하라.
	for (int i  = 0; i < 10; i++)
	{

		cout << num[i] << endl;
	}

	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:36:45 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
// 
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;


int main()
{	
	
	int num[20]{1,2,3,4,5  };
	// [문제] num에 저장된 정수를 출력하라.
	for (int i  = 0; i < 20; i++)
	{

		cout << num[i] << endl;
	}

	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:38:17 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
// 
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;


int main()
{	
	
	int num[]{1,2,3,4,5,0,0,0,0,0,1,2,3 };
	// [문제] num에 저장된 정수를 출력하라.
	for (int i  = 0; i < size(num); i++)
		cout << num[i] ;
	cout << endl;
	

	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:40:19 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
// 
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;


int main()
{	
	
	int num[]{1,2,3,4,5,0,0,0,0,0,1,2,3 };
	// [문제] num에 저장된 값을 모두 출력하라.
	// range-for을 이용하여 출력한다.
	for (int n : num)
		cout << n << "  ";
	cout << endl;
	

	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:41:39 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
// 
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;


int main()
{	
	
	int num[]{1,2,3,4,5,0,0,0,0,0,1,2,3 };
	// [문제] num에 저장된 값을 모두 출력하라.
	// range-for을 이용하여 출력한다.
	// : --> in 
	
	for (int n : num)
		cout << n << "  ";
	cout << endl;
	
	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:42:20 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
// 
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;


int main()
{	
	
	int num[]{1,2,3,4,5 };
	// [문제] num에 저장된 값을 모두 출력하라.
	// range-for을 이용하여 출력한다.
	// : --> in 
	
	for (int n : num)
		cout << n << "  ";
	cout << endl;
	
	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:45:09 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
// 
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

int NUM{ 30 };

int main()
{	
	// 지역이란 무엇인가?
	// 전역이 아닌것이 지역.
	int n{ 20 };
	{
		int n = 10;
		{
			int n{ 40 }; // n 의 life는 {} 이다.

			cout << n << endl;
		}
	}
	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:50:37 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<string>
using namespace std;

int main()
{	
	char			c{ 'A' };
	short			s{ 123 };
	int				num{ 12345678 };
	double		 d{ 3.14159265358979 };
	string		str{ "C++은 너무 재미있어!" };

	cout << c << endl;
	cout << s << endl;
	cout << d << endl;
	cout << num << endl;
	cout << sizeof(str) << endl;
	
	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:51:00 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<string>
using namespace std;

int main()
{	
	char			c{ 'A' };
	short			s{ 123 };
	int				num{ 12345678 };
	double		 d{ 3.14159265358979 };
	string		str{ "C++은 너무 재미있어!" };

	cout << c << endl;
	cout << s << endl;
	cout << d << endl;
	cout << num << endl;
	cout << sizeof(str) << endl;
	
	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 5:52:35 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 1일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<string>
using namespace std;

int main()
{	
	char			c{ 'A' };
	short			s{ 123 };
	int				num{ 12345678 };
	double		 d{ 3.14159265358979 };
	string		str{ "C++은 너무 재미있어!" };

	cout << c << endl;
	cout << s << endl;
	cout << d << endl;
	cout << num << endl;
	cout << str << endl;
	
	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:07:55 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<string>
using namespace std;

// [ 문제 ] 각 변수의 내용과 메모리 주소를 출력하라
//

int main()
{	
	
	char			c{ 'A' };
	int				num{ 12345678 };
	string		str{ "C++은 너무 재미있어!" };

	cout << c << "  " << &c << endl;;
	cout << num << "  " << &num << endl;
	cout << str << "  " << &str << endl;

	
	
	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:12:28 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<string>
using namespace std;

// [ 문제 ] 각 변수의 내용과 메모리 주소를 출력하라
//

int main()
{	
	
	char			c{ 'A' };
	int				n{ 12345678 };
	string		str{ "C++은 너무 재미있어!" };
	// [실습]  &c의 값이 주소로 출력되지 않는 이유
	cout << c << "  " << (void*)&c << endl;;
	cout << n << "  " << &n << endl;
	cout << str << "  " << &str << endl;
	{
		// 지역변수를 만들고 주소를 확인해본다.
		int num[]{ 11,22,33,44,55 };
		//[문제] num의 모든 원소의 값과 주소를 출력하라.
		for (int i : num)
		{
			cout << i << endl;
			cout << &i << endl;
		}

	}
	
	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:17:21 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<string>
using namespace std;

// [ 문제 ] 각 변수의 내용과 메모리 주소를 출력하라
//

int main()
{	
	
	char			c{ 'A' };
	int				n{ 12345678 };
	string		str{ "C++은 너무 재미있어!" };
	// [실습]  &c의 값이 주소로 출력되지 않는 이유
	cout << c << "  " << (void*)&c << endl;;
	cout << n << "  " << &n << endl;
	cout << str << "  " << &str << endl;
	{
		// 지역변수를 만들고 주소를 확인해본다.
		int num[]{ 11,22,33,44,55 };
		//[문제] num의 모든 원소의 값과 주소를 출력하라.
		for (int i = 0; i < size(num); ++i)
		{
			cout << num[i] << "  " << &num[i] << endl;
		}

	}
	
	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:19:16 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<string>
using namespace std;

// [ 문제 ] 전역변수와 지역변수가 만들어진 공간이 다름을 확인하라.
//
int g;

int main()
{	
	// 전역변수 g의 주소를 적어본다.
	cout << g << "  " << &g << endl;
	char			c{ 'A' };
	int				n{ 12345678 };
	string		str{ "C++은 너무 재미있어!" };
	// [실습]  &c의 값이 주소로 출력되지 않는 이유
	cout << c << "  " << (void*)&c << endl;;
	cout << n << "  " << &n << endl;
	cout << str << "  " << &str << endl;
	{
		// 지역변수를 만들고 주소를 확인해본다.
		int num[]{ 11,22,33,44,55 };
		//[문제] num의 모든 원소의 값과 주소를 출력하라.
		for (int i = 0; i < size(num); ++i)
		{
			cout << num[i] << "  " << &num[i] << endl;
		}

	}
	
	save("1.cpp");

}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:21:20 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	//[문제]

	int a{ 1 };
	int b{ 2 };

	cout << a << ", " << b << endl;
	
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:22:39 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	

	int a{ 1 };
	int b{ 2 };

	//[문제] 여기에서 뭔가를 하여 다음 문장을 실행하면 
	// 2 , 1 과 같이 출력되도록 하라.

	int temp{ 0 };
	temp = a;
	a = b;
	b = temp;

	cout << a << ", " << b << endl;
	
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:28:25 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	

	int a{ 1 };
	int b{ 2 };

	//[문제] 두 변수 a 와 b의 값이 서로 바뀌도록 코딩하라.


	int temp{ a };
	a = b;
	b = temp;

	cout << a << ", " << b << endl;
	
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:33:20 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	int num[] = { 3, 1, 9 ,5, 7 };
	//[문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라
	//int num[] { 1,3,5,7,9};
	int temp{ 0 };
	for (int i : num)
	{
		temp = num[i + 1];
		if (num[i] > temp)
		{
			temp = num[i];
			num[i + 1] = temp;
		}
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:33:40 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	int num[] = { 3, 1, 9 ,5, 7 };
	//[문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라
	//int num[] { 1,3,5,7,9};
	int temp{ 0 };
	for (int i : num)
	{
		temp = num[i + 1];
		if (num[i] > temp)
		{
			temp = num[i];
			num[i + 1] = temp;
		}
		cout << i << endl;
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:34:01 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	int num[] = { 3, 1, 9 ,5, 7 };
	//[문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라
	//int num[] { 1,3,5,7,9};
	int temp{ 0 };
	for (int i : num)
	{
		temp = num[i + 1];
		if (num[i] > temp)
		{
			temp = num[i];
			num[i + 1] = temp;
		}
	
	}
	for (int n : num)
	{
		cout << n << endl;
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:37:04 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	int num[] = { 3, 1, 9 ,5, 7 };
	//[문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라
	//int num[] { 1,3,5,7,9};
	for (int i = 0; i < size(num) - 1; i++)
	{
		if (num[i] > num[i + 1])
		{
			int temp = num[i];
			num[i + 1] = temp;
			num[i] = num[i + 1];
		}

	}
	for (int n : num)
	{
		cout << n << endl;
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:37:27 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	int num[] = { 3, 1, 9 ,5, 7 };
	//[문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라
	//int num[] { 1,3,5,7,9};
	for (int i = 0; i < size(num) - 1; i++)
	{
		if (num[i] > num[i + 1])
		{
			int temp = num[i];
			num[i] = num[i + 1];
			num[i + 1] = temp;
		}

	}
	for (int n : num)
	{
		cout << n << endl;
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:38:27 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	int num[] = { 3, 1, 9 ,5, 7 };
	//[문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라
	//int num[] { 1,3,5,7,9};
	for (int i = 0; i < size(num) - 1; i++)
	{
		if (num[i] > num[i + 1])
		{
			int temp = num[i];
			num[i] = num[i + 1];
			num[i + 1] = temp;
		}

	}
	for (int n : num)
	{
		cout << n ;
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:39:26 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	int num[] = { 123,424,333,55123,95931,888888 };
	//[문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라
	//int num[] { 1,3,5,7,9};
	for (int i = 0; i < size(num) - 1; i++)
	{
		if (num[i] > num[i + 1])
		{
			int temp = num[i];
			num[i] = num[i + 1];
			num[i + 1] = temp;
		}

	}
	for (int n : num)
	{
		cout << n << " ";
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:42:22 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	int num[] = { 123,424,333,55123,95931,888888 };
	//[문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라
	//int num[] { 1,3,5,7,9};
	// num 에 저장된  int값을 오름차순으로(ascending order) 정렬하시오
	for (int i = 0; i < size(num) - 1; i++)
	{
		if (num[i] > num[i + 1])
		{
			int temp = num[i];
			num[i] = num[i + 1];
			num[i + 1] = temp;
		}

	}

	for (int n : num)
	{
		cout << n << " ";
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:42:36 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	int num[] = { 99999,123,424,333,55123,95931,888888 };
	//[문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라
	//int num[] { 1,3,5,7,9};
	// num 에 저장된  int값을 오름차순으로(ascending order) 정렬하시오
	for (int i = 0; i < size(num) - 1; i++)
	{
		if (num[i] > num[i + 1])
		{
			int temp = num[i];
			num[i] = num[i + 1];
			num[i + 1] = temp;
		}

	}

	for (int n : num)
	{
		cout << n << " ";
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:42:49 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	int num[] = { 9999999,123,424,333,55123,95931,888888 };
	//[문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라
	//int num[] { 1,3,5,7,9};
	// num 에 저장된  int값을 오름차순으로(ascending order) 정렬하시오
	for (int i = 0; i < size(num) - 1; i++)
	{
		if (num[i] > num[i + 1])
		{
			int temp = num[i];
			num[i] = num[i + 1];
			num[i + 1] = temp;
		}

	}

	for (int n : num)
	{
		cout << n << " ";
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 6:43:58 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	int num[] = { 9999999,123,424,333,55123,95931,888888, 6, -120,-130 };
	//[문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라
	//int num[] { 1,3,5,7,9};
	// num 에 저장된  int값을 오름차순으로(ascending order) 정렬하시오
	for (int i = 0; i < size(num) - 1; i++)
	{
		if (num[i] > num[i + 1])
		{
			int temp = num[i];
			num[i] = num[i + 1];
			num[i + 1] = temp;
		}

	}

	for (int n : num)
	{
		cout << n << " ";
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 7:31:35 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//						 int를 정렬해본다.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	int num[] = { 9999999,123,424,333,55123,95931,888888, 6, -120,-130 };
	//[문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라
	//int num[] { 1,3,5,7,9};
	// num 에 저장된  int값을 오름차순으로(ascending order) 정렬하시오
	for (int j = 0; j < size(num ) - 1; j++)
	{
		for (int i = 0; i < size(num) - 1 - j; i++)
		{
			if (num[i] > num[i + 1])
			{
				int temp = num[i];
				num[i] = num[i + 1];
				num[i + 1] = temp;
			}

		}
	}
	for (int n : num)
	{
		cout << n << " ";
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 7:38:24 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 자료형과 변수
//					  -  uniform 초기화
//						 지역변수와 전역변수
//						 int [] 와 같은 자료형은 반드시 연속된 메모리를 확보
//						 지역변수 사는 곳이 유사하다. -- > STACK {메모리 공간, 자료구조에서 배우는 stack와 다름}
//						 전역변수가 사는 곳 -- > DATA
//						 int를 정렬해본다.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	int num[] = { 9999999,123,424,333,55123,95931,888888, 6, -120,-130 };
	//[문제] num에 저장된 int 값 중에서 제일 큰 수를 마지막 위치로 옮겨라
	//int num[] { 1,3,5,7,9};
	// num 에 저장된  int값을 오름차순으로(ascending order) 정렬하시오
	
	//bubble sort
	for (int j = 0; j < size(num ) - 1; j++)
	{
		for (int i = 0; i < size(num) - 1 - j; i++)
		{
			if (num[i] > num[i + 1])
			{
				int temp = num[i];
				num[i] = num[i + 1];
				num[i + 1] = temp;
			}
		}
	}
	for (int n : num)
	{
		cout << n << " ";
	}
	
	save("1.cpp");
}
	------------------------------------------------
저장시간 - 2022-03-15 오후 7:40:39 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	//[문제] 임의의 정수값을 화면에 출력하라.

	cout << rand() << endl;

	save("1.cpp");
}
//for (int j = 0; j < size(num) - 1; j++)
//{
//	for (int i = 0; i < size(num) - 1 - j; i++)
//	{
//		if (num[i] > num[i + 1])
//		{
//			int temp = num[i];
//			num[i] = num[i + 1];
//			num[i + 1] = temp;
//		}
//	}
//}
	------------------------------------------------
저장시간 - 2022-03-15 오후 7:42:43 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	//[문제] 임의의 정수값을 화면에 출력하라.(pseudo - random value)
	//(실습) random number generation 을 구굴링하시오.
	for(int i = 0;i<10000;i++)
	{
		cout << rand() << endl;
	}

	save("1.cpp");
}
//for (int j = 0; j < size(num) - 1; j++)
//{
//	for (int i = 0; i < size(num) - 1 - j; i++)
//	{
//		if (num[i] > num[i + 1])
//		{
//			int temp = num[i];
//			num[i] = num[i + 1];
//			num[i + 1] = temp;
//		}
//	}
//}
	------------------------------------------------
저장시간 - 2022-03-15 오후 7:43:33 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"

using namespace std;


int main()
{	
	//[문제] 임의의 정수값을 화면에 출력하라.(pseudo - random value)
	//(실습) random number generation 을 구굴링하시오.
	for(int i = 0;i<10000;i++)
	{
		cout << rand() << "\t";
	}

	save("1.cpp");
}
//for (int j = 0; j < size(num) - 1; j++)
//{
//	for (int i = 0; i < size(num) - 1 - j; i++)
//	{
//		if (num[i] > num[i + 1])
//		{
//			int temp = num[i];
//			num[i] = num[i + 1];
//			num[i + 1] = temp;
//		}
//	}
//}
	------------------------------------------------
저장시간 - 2022-03-15 오후 7:47:38 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>
#include"save.h"

using namespace std;


int main()
{	
	//C++에서 랜덤값 생성 
	// - 랜덤엔진과 분포를 사용한다.
	default_random_engine dre;
	uniform_int_distribution<int> uid;
	for (int i = 0; i < 100; i++)
	{
	cout << uid( dre ) << "\t";
	}
	cout << endl;


	save("1.cpp");
}
//for (int j = 0; j < size(num) - 1; j++)
//{
//	for (int i = 0; i < size(num) - 1 - j; i++)
//	{
//		if (num[i] > num[i + 1])
//		{
//			int temp = num[i];
//			num[i] = num[i + 1];
//			num[i + 1] = temp;
//		}
//	}
//}
	------------------------------------------------
저장시간 - 2022-03-15 오후 7:50:31 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>
#include"save.h"

using namespace std;


int main()
{	
	//[문제] 주사위 값을 출력하라.

	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };
	
	for (int i = 0; i < 10; i++)
	{
		cout << uid(dre) << endl;
	}
	
	save("1.cpp");
}
//for (int j = 0; j < size(num) - 1; j++)
//{
//	for (int i = 0; i < size(num) - 1 - j; i++)
//	{
//		if (num[i] > num[i + 1])
//		{
//			int temp = num[i];
//			num[i] = num[i + 1];
//			num[i + 1] = temp;
//		}
//	}
//}
	------------------------------------------------
저장시간 - 2022-03-15 오후 7:52:19 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>
#include<thread>
#include"save.h"

using namespace std;


int main()
{	
	save("1.cpp");
	//[문제] 주사위 값을 출력하라. 그런데 1/10초 마다 하나씩 출력하라.

	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };
	
	while(true)
	{
		this_thread::sleep_for(100ms);

		cout << uid(dre) << endl;
	}
	
	
}
//for (int j = 0; j < size(num) - 1; j++)
//{
//	for (int i = 0; i < size(num) - 1 - j; i++)
//	{
//		if (num[i] > num[i + 1])
//		{
//			int temp = num[i];
//			num[i] = num[i + 1];
//			num[i + 1] = temp;
//		}
//	}
//}
	------------------------------------------------
저장시간 - 2022-03-15 오후 7:52:34 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>
#include<thread>
#include"save.h"

using namespace std;


int main()
{	
	save("1.cpp");
	//[문제] 주사위 값을 출력하라. 그런데 1/10초 마다 하나씩 출력하라.

	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };
	
	while(true)
	{
		this_thread::sleep_for(100ms);

		cout << uid(dre) << " ";
	}
	
	
}
//for (int j = 0; j < size(num) - 1; j++)
//{
//	for (int i = 0; i < size(num) - 1 - j; i++)
//	{
//		if (num[i] > num[i + 1])
//		{
//			int temp = num[i];
//			num[i] = num[i + 1];
//			num[i + 1] = temp;
//		}
//	}
//}
	------------------------------------------------
저장시간 - 2022-03-15 오후 7:53:26 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>
#include<thread>
#include"save.h"

using namespace std;


int main()
{	
	save("1.cpp");
	//[문제] 주사위 값을 출력하라. 그런데 1/10초 마다 하나씩 출력하라.

	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };
	
	while(true)
	{
		this_thread::sleep_for(1s);
		cout << '\7';
		cout << uid(dre) << " ";
	}
	
	
}
//for (int j = 0; j < size(num) - 1; j++)
//{
//	for (int i = 0; i < size(num) - 1 - j; i++)
//	{
//		if (num[i] > num[i + 1])
//		{
//			int temp = num[i];
//			num[i] = num[i + 1];
//			num[i + 1] = temp;
//		}
//	}
//}
	------------------------------------------------
저장시간 - 2022-03-15 오후 7:57:28 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>
#include<thread>
#include"save.h"

using namespace std;
// [문제] 임의의 값을 갖는 정수 10000개를 생성하라.
// 생성한 정수의 값을 화면에 출력하라
//	정수를 오름차순으로 정렬하라.
// 정렬한 정수를 화면에 출력하라.

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid;
	
	cout << " 생성한 정수 " << endl;
	for (int i = 0; i < 10000; i++)
	{
		cout<< uid(dre) << "  ";

	}
	cout << "오름차순으로 정렬한 정수" << endl;

	save("1.cpp");
}
//for (int j = 0; j < size(num) - 1; j++)
//{
//	for (int i = 0; i < size(num) - 1 - j; i++)
//	{
//		if (num[i] > num[i + 1])
//		{
//			int temp = num[i];
//			num[i] = num[i + 1];
//			num[i + 1] = temp;
//		}
//	}
//}
	------------------------------------------------
저장시간 - 2022-03-15 오후 7:59:39 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>
#include<thread>
#include"save.h"

using namespace std;
// [문제] 임의의 값을 갖는 정수 10000개를 생성하라.
// 생성한 정수의 값을 화면에 출력하라
//	정수를 오름차순으로 정렬하라.
// 정렬한 정수를 화면에 출력하라.

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid;
	int numberlist[]{0};
	cout << " 생성한 정수 " << endl;

	for (int i = 0; i < 10000; i++)
	{
		numberlist[i] = uid(dre);
		cout<< uid(dre) << "  ";
	}

	cout << "오름차순으로 정렬한 정수" << endl;
	for (int j = 0; j < size(numberlist) - 1; j++)
{
	for (int i = 0; i < size(numberlist) - 1 - j; i++)
	{
		if (numberlist[i] > numberlist[i + 1])
		{
			int temp = numberlist[i];
			numberlist[i] = numberlist[i + 1];
			numberlist[i + 1] = temp;
		}
	}
}
	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-15 오후 8:01:00 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>
#include<thread>
#include"save.h"

using namespace std;
// [문제] 임의의 값을 갖는 정수 10000개를 생성하라.
// 생성한 정수의 값을 화면에 출력하라
//	정수를 오름차순으로 정렬하라.
// 정렬한 정수를 화면에 출력하라.

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid;
	int numberlist[]{0};
	cout << " 생성한 정수 " << endl;

	for (int i = 0; i < 10000; i++)
	{
		numberlist[i] = uid(dre);
		cout<< uid(dre) << "  ";
	}
//
//	cout << "오름차순으로 정렬한 정수" << endl;
//	for (int j = 0; j < size(numberlist) - 1; j++)
//{
//	for (int i = 0; i < size(numberlist) - 1 - j; i++)
//	{
//		if (numberlist[i] > numberlist[i + 1])
//		{
//			int temp = numberlist[i];
//			numberlist[i] = numberlist[i + 1];
//			numberlist[i + 1] = temp;
//		}
//	}
//}
	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-15 오후 8:01:53 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>
#include<thread>
#include"save.h"

using namespace std;
// [문제] 임의의 값을 갖는 정수 10000개를 생성하라.
// 생성한 정수의 값을 화면에 출력하라
//	정수를 오름차순으로 정렬하라.
// 정렬한 정수를 화면에 출력하라.

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid;
	int numberlist[10000]{0};
	cout << " 생성한 정수 " << endl;

	for (int i = 0; i < 10000 - 1; i++)
	{
		cout<< uid(dre) << "  ";
		numberlist[i] = uid(dre);
	}
//
//	cout << "오름차순으로 정렬한 정수" << endl;
//	for (int j = 0; j < size(numberlist) - 1; j++)
//{
//	for (int i = 0; i < size(numberlist) - 1 - j; i++)
//	{
//		if (numberlist[i] > numberlist[i + 1])
//		{
//			int temp = numberlist[i];
//			numberlist[i] = numberlist[i + 1];
//			numberlist[i + 1] = temp;
//		}
//	}
//}
	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-15 오후 8:02:06 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>
#include<thread>
#include"save.h"

using namespace std;
// [문제] 임의의 값을 갖는 정수 10000개를 생성하라.
// 생성한 정수의 값을 화면에 출력하라
//	정수를 오름차순으로 정렬하라.
// 정렬한 정수를 화면에 출력하라.

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid;
	int numberlist[10000]{0};
	cout << " 생성한 정수 " << endl;

	for (int i = 0; i < 10000 - 1; i++)
	{
		cout<< uid(dre) << "  ";
		numberlist[i] = uid(dre);
	}

	cout << "오름차순으로 정렬한 정수" << endl;
	for (int j = 0; j < size(numberlist) - 1; j++)
{
	for (int i = 0; i < size(numberlist) - 1 - j; i++)
	{
		if (numberlist[i] > numberlist[i + 1])
		{
			int temp = numberlist[i];
			numberlist[i] = numberlist[i + 1];
			numberlist[i + 1] = temp;
		}
	}
}
	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-15 오후 8:02:50 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>
#include<thread>
#include"save.h"

using namespace std;
// [문제] 임의의 값을 갖는 정수 10000개를 생성하라.
// 생성한 정수의 값을 화면에 출력하라
//	정수를 오름차순으로 정렬하라.
// 정렬한 정수를 화면에 출력하라.

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid;
	int numberlist[10000]{0};
	cout << " 생성한 정수 " << endl;

	for (int i = 0; i < 10000 - 1; i++)
	{
		cout<< uid(dre) << "  ";
		numberlist[i] = uid(dre);
	}

	cout << "오름차순으로 정렬한 정수" << endl;
	for (int j = 0; j < size(numberlist) - 1; j++)
{
	for (int i = 0; i < size(numberlist) - 1 - j; i++)
	{
		if (numberlist[i] > numberlist[i + 1])
		{
			int temp = numberlist[i];
			numberlist[i] = numberlist[i + 1];
			numberlist[i + 1] = temp;
		}
	}
}
	for (int x : numberlist)
	{
		cout << x << "\t";
	}
	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-15 오후 8:08:32 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>
#include<thread>
#include"save.h"

using namespace std;
// [문제] 임의의 값을 갖는 정수 10000개를 생성하라.
// 생성한 정수의 값을 화면에 출력하라
//	정수를 오름차순으로 정렬하라.
// 정렬한 정수를 화면에 출력하라.

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid;
	int numberlist[10000]{0};
	cout << " 생성한 정수 " << endl;

	for (int i = 0; i < size(numberlist); i++)
	{
		cout<< uid(dre) << "\t";
		numberlist[i] = uid(dre);
	}

	cout << "오름차순으로 정렬한 정수" << endl;
	for (int j = 0; j < size(numberlist) - 1; j++)
{
	for (int i = 0; i < size(numberlist) - 1 - j; i++)
	{
		if (numberlist[i] > numberlist[i + 1])
		{
			int temp = numberlist[i];
			numberlist[i] = numberlist[i + 1];
			numberlist[i + 1] = temp;
		}
	}
}
	for (int x : numberlist)
	{
		cout << x << "\t";
	}
	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-15 오후 8:09:56 화요일
//-------------------------------------------------------------------------------------------------
//                                                            2주 2일차                       
//
//공부할 내용 - 
// int 를 정렬해본다 -  bubblesort
// int 값을 random하게 생성하는 방법
// .
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<random>
#include<thread>
#include"save.h"

using namespace std;
// [문제] [1,1000]을 갖는 정수 1000개를 생성하라.
// 생성한 정수의 값을 화면에 출력하라
//	정수를 오름차순으로 정렬하라.
// 정렬한 정수를 화면에 출력하라.

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,1000 };
	int numberlist[1000]{0};
	cout << " 생성한 정수 " << endl;

	for (int i = 0; i < size(numberlist); i++)
	{
		cout<< uid(dre) << " ";
		numberlist[i] = uid(dre);
	}

	cout << "오름차순으로 정렬한 정수" << endl;
	for (int j = 0; j < size(numberlist) - 1; j++)
{
	for (int i = 0; i < size(numberlist) - 1 - j; i++)
	{
		if (numberlist[i] > numberlist[i + 1])
		{
			int temp = numberlist[i];
			numberlist[i] = numberlist[i + 1];
			numberlist[i + 1] = temp;
		}
	}
}
	for (int x : numberlist)
	{
		cout << x << " ";
	}
	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-19 오후 6:38:19 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// C++은 자료를 어떻게 정렬하ㄴㄴ가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<random>

// [문제] 주사위를 10000번 던져 나온 숫자를 메모리에 저정하라.
// 각 숫자의 출현 확률을 계산하여 화면에 출력하라.
//주사위 값            확률
//   1                 -     0.1666
using namespace std;

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };
	int numberlist[10000]{};

	for (int i = 0; i < size(numberlist); i++)
	{
		numberlist[i] = uid(dre);
		cout << numberlist[i] << "\t";
	}

	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-19 오후 6:40:27 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// C++은 자료를 어떻게 정렬하ㄴㄴ가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<random>

// [문제] 주사위를 10000번 던져 나온 숫자를 메모리에 저정하라.
// 각 숫자의 출현 확률을 계산하여 화면에 출력하라.
//주사위 값            확률
//   1                 -     0.1666
using namespace std;

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };
	char num[10000];

	for (int i = 0; i < size(num); i++)
	{
		num[i] = uid(dre);
	}
	for (char n : num)
	{
		cout << static_cast<int>(n) << " ";

	}
	cout << endl;

	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-19 오후 6:42:40 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// C++은 자료를 어떻게 정렬하ㄴㄴ가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<random>

// [문제] 주사위를 10000번 던져 나온 숫자를 메모리에 저정하라.
// 각 숫자의 출현 확률을 계산하여 화면에 출력하라.
//주사위 값            확률
//   1                 -     0.1666
using namespace std;

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };
	char num[10000];

	for (int i = 0; i < size(num); i++)
	{
		num[i] = uid(dre);
	}
	//각 숫자의 확률을 계산한다.
	for (int n : num)
	{
		cout << n << " ";
	}
	cout << endl;

	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-19 오후 6:43:49 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// C++은 자료를 어떻게 정렬하ㄴㄴ가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<random>

// [문제] 주사위를 10000번 던져 나온 숫자를 메모리에 저정하라.
// 각 숫자의 출현 확률을 계산하여 화면에 출력하라.
//주사위 값            확률
//   1                 -     0.1666
using namespace std;

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };
	char num[10000];

	for (int i = 0; i < size(num); i++)
	{
		num[i] = uid(dre);
	}
	//각 숫자의 확률을 계산한다.

	int num1{};


	for (int n : num)
	{
		if (n == 1)
			num1++;
	}
	cout << "1의 개수 - " << num1 << endl;;

	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-19 오후 6:45:08 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// C++은 자료를 어떻게 정렬하ㄴㄴ가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<random>

// [문제] 주사위를 10000번 던져 나온 숫자를 메모리에 저정하라.
// 각 숫자의 출현 확률을 계산하여 화면에 출력하라.
//주사위 값            확률
//   1                 -     0.1666
using namespace std;

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };
	char num[10000];

	for (int i = 0; i < size(num); i++)
	{
		num[i] = uid(dre);
	}
	//각 숫자의 확률을 계산한다.

	int num1{};
	int num2{};
	int num3{};
	int num4{};
	int num5{};
	int num6{};


	for (int n : num)
	{
		if (n == 1)
			num1++;
		if (n == 2)
			num2++;
		if (n == 3)
			num3++;
		if (n == 4)
			num4++;
		if (n == 5)
			num5++;
		if (n == 6)
			num6++;
	}
	cout << "1의 개수 - " << num1 << endl;;
	cout << "2의 개수 - " << num2 << endl;;
	cout << "3의 개수 - " << num3<< endl;;
	cout << "4의 개수 - " << num4 << endl;;
	cout << "5의 개수 - " << num5<< endl;;
	cout << "6의 개수 - " << num6<< endl;;


	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-19 오후 6:49:56 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// C++은 자료를 어떻게 정렬하ㄴㄴ가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<random>

// [문제] 주사위를 10000번 던져 나온 숫자를 메모리에 저정하라.
// 각 숫자의 출현 확률을 계산하여 화면에 출력하라.
//주사위 값            확률
//   1                 -     0.1666
using namespace std;

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };
	char num[10000];

	for (int i = 0; i < size(num); i++)
	{
		num[i] = uid(dre);
	}
	//각 숫자의 확률을 계산한다.

	int count[6]{ };


	for (int n : num)
	{
		count[n - 1]++;
	}
	for (int i = 0; i < 6; i++)
	{
		cout << i + 1 << "의 갯수 - " << count[i] << endl;
	}

	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-19 오후 6:51:42 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// C++은 자료를 어떻게 정렬하ㄴㄴ가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<random>

// [문제] 주사위를 10000번 던져 나온 숫자를 메모리에 저정하라.
// 각 숫자의 출현 확률을 계산하여 화면에 출력하라.
//주사위 값            확률
//   1                 -     0.1666
using namespace std;

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };
	char num[10000];

	for (int i = 0; i < size(num); i++)
	{
		num[i] = uid(dre);
	}
	//각 숫자의 확률을 계산한다.

	int count[6]{ };


	for (int n : num)
	{
		count[n - 1]++;
	}
	for (int i = 0; i < 6; i++)
	{
		cout << i + 1 << "의 갯수 - " << static_cast<double>(count[i])/ size(num) << endl;
	}

	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-19 오후 6:51:53 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// C++은 자료를 어떻게 정렬하ㄴㄴ가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<random>

// [문제] 주사위를 10000번 던져 나온 숫자를 메모리에 저정하라.
// 각 숫자의 출현 확률을 계산하여 화면에 출력하라.
//주사위 값            확률
//   1                 -     0.1666
using namespace std;

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };
	char num[100000];

	for (int i = 0; i < size(num); i++)
	{
		num[i] = uid(dre);
	}
	//각 숫자의 확률을 계산한다.

	int count[6]{ };


	for (int n : num)
	{
		count[n - 1]++;
	}
	for (int i = 0; i < 6; i++)
	{
		cout << i + 1 << "의 갯수 - " << static_cast<double>(count[i])/ size(num) << endl;
	}

	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-19 오후 6:52:10 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// C++은 자료를 어떻게 정렬하ㄴㄴ가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<random>

// [문제] 주사위를 10000번 던져 나온 숫자를 메모리에 저정하라.
// 각 숫자의 출현 확률을 계산하여 화면에 출력하라.
//주사위 값            확률
//   1                 -     0.1666
using namespace std;

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };
	char num[1000000];

	for (int i = 0; i < size(num); i++)
	{
		num[i] = uid(dre);
	}
	//각 숫자의 확률을 계산한다.

	int count[6]{ };


	for (int n : num)
	{
		count[n - 1]++;
	}
	for (int i = 0; i < 6; i++)
	{
		cout << i + 1 << "의 갯수 - " << static_cast<double>(count[i])/ size(num) << endl;
	}

	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-19 오후 6:52:15 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// C++은 자료를 어떻게 정렬하ㄴㄴ가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<random>

// [문제] 주사위를 10000번 던져 나온 숫자를 메모리에 저정하라.
// 각 숫자의 출현 확률을 계산하여 화면에 출력하라.
//주사위 값            확률
//   1                 -     0.1666
using namespace std;

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };
	char num[1000000];

	for (int i = 0; i < size(num); i++)
	{
		num[i] = uid(dre);
	}
	//각 숫자의 확률을 계산한다.

	int count[6]{ };


	for (int n : num)
	{
		count[n - 1]++;
	}
	for (int i = 0; i < 6; i++)
	{
		cout << i + 1 << "의 갯수 - " << static_cast<double>(count[i])/ size(num) << endl;
	}

	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-19 오후 7:08:10 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// 지역변수의 크기한계  - default 1Mb
// 전역변수의 크기한계 - OS(운영체제)가 제공하는 만큼.
// C++은 자료를 어떻게 정렬한가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
#include<random>

// [문제] 주사위를 10000번 던져 나온 숫자를 메모리에 저정하라.
// 각 숫자의 출현 확률을 계산하여 화면에 출력하라.
//주사위 값            확률
//   1                 -     0.1666
using namespace std;
	char num[100000000];

int main()
{	
	default_random_engine dre;
	uniform_int_distribution<int> uid{ 1,6 };

	for (int i = 0; i < size(num); i++)
	{
		num[i] = uid(dre);
	}
	//각 숫자의 확률을 계산한다.

	int count[6]{ };


	for (int n : num)
	{
		count[n - 1]++;
	}
	for (int i = 0; i < 6; i++)
	{
		cout << i + 1 << "의 갯수 - " << static_cast<double>(count[i])/ size(num) << endl;
	}

	save("1.cpp");
}

	------------------------------------------------
저장시간 - 2022-03-19 오후 7:13:00 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// 지역변수의 크기한계  - default 1Mb
// 전역변수의 크기한계 - OS(운영체제)가 제공하는 만큼.
// C++은 자료를 어떻게 정렬한가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>
#include<random>

#include"save.h"

using namespace std;

//[문제] 파일 "점수.txt" 에는 학생 100명의 C++점수가 저장되어 있다.
// 평균점수를 계산하여 화면에 출력하라.


void makeData();

int main()
{	
	makeData();					//점수를 파일에 기록한다.
	save("1.cpp");
}
void makeData()
{
	ofstream out{ "점수.txt" };
	default_random_engine dre;
	uniform_int_distribution<> uid{ 0,100 };
	
	for (int i = 0; i < 100; i++)
	{
		cout << uid(dre) << " ";
	}
	cout << endl;
}
	------------------------------------------------
저장시간 - 2022-03-19 오후 7:15:02 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// 지역변수의 크기한계  - default 1Mb
// 전역변수의 크기한계 - OS(운영체제)가 제공하는 만큼.
// C++은 자료를 어떻게 정렬한가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>
#include<random>

#include"save.h"

using namespace std;

//[문제] 파일 "점수.txt" 에는 학생 100명의 C++점수가 저장되어 있다.
// 평균점수를 계산하여 화면에 출력하라.


void makeData();

int main()
{	
	makeData();					//점수를 파일에 기록한다.
	save("1.cpp");
}
void makeData()
{
	ofstream out{ "점수.txt" };

	default_random_engine dre;
	uniform_int_distribution<> uid{ 0,100 };
	
	for (int i = 0; i < 100; i++)
	{
		out << uid(dre) << "   ";
	}
	out << endl;
}
	------------------------------------------------
저장시간 - 2022-03-19 오후 7:18:53 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// 지역변수의 크기한계  - default 1Mb
// 전역변수의 크기한계 - OS(운영체제)가 제공하는 만큼.
// C++은 자료를 어떻게 정렬한가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>


#include"save.h"

using namespace std;

//[문제] 파일 "점수.txt" 에는 학생 100명의 C++점수가 저장되어 있다.
// 평균점수를 계산하여 화면에 출력하라.



int main()
{	
	ifstream in{ "점수.txt" };
	
	int num; 
	in >> num;
	cout << num;
	save("1.cpp");
}
------------------------------------------------
저장시간 - 2022-03-19 오후 7:21:02 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// 지역변수의 크기한계  - default 1Mb
// 전역변수의 크기한계 - OS(운영체제)가 제공하는 만큼.
// C++은 자료를 어떻게 정렬한가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>


#include"save.h"

using namespace std;

//[문제] 파일 "점수.txt" 에는 학생 100명의 C++점수가 저장되어 있다.
// 평균점수를 계산하여 화면에 출력하라.



int main()
{	
	ifstream in{ "점수.txt" };
	for (int  i = 0; i < 100; i++)
	{
		int num;
		in >> num;
		cout << num;

	}
	save("1.cpp");
}
------------------------------------------------
저장시간 - 2022-03-19 오후 7:21:09 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// 지역변수의 크기한계  - default 1Mb
// 전역변수의 크기한계 - OS(운영체제)가 제공하는 만큼.
// C++은 자료를 어떻게 정렬한가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>


#include"save.h"

using namespace std;

//[문제] 파일 "점수.txt" 에는 학생 100명의 C++점수가 저장되어 있다.
// 평균점수를 계산하여 화면에 출력하라.



int main()
{	
	ifstream in{ "점수.txt" };
	for (int  i = 0; i < 100; i++)
	{
		int num;
		in >> num;
		cout << num << " ";

	}
	save("1.cpp");
}
------------------------------------------------
저장시간 - 2022-03-19 오후 7:22:00 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형 변수 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// 지역변수의 크기한계  - default 1Mb
// 전역변수의 크기한계 - OS(운영체제)가 제공하는 만큼.
// C++은 자료를 어떻게 정렬한가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>


#include"save.h"

using namespace std;

//[문제] 파일 "점수.txt" 에는 학생 100명의 C++점수가 저장되어 있다.
// 평균점수를 계산하여 화면에 출력하라.



int main()
{	
	ifstream in{ "점수.txt" };
	int sum{};
	for (int  i = 0; i < 100; i++)
	{
		int num;
		in >> num;
		sum += num;

	}
	cout << "평균값-" << sum / 100.0 << endl;
	save("1.cpp");
}
------------------------------------------------
저장시간 - 2022-03-19 오후 7:23:18 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형, 변수, 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// 지역변수의 크기한계  - default 1Mb
// 전역변수의 크기한계 - OS(운영체제)가 제공하는 만큼.
// C++은 자료를 어떻게 정렬한가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include<fstream>


#include"save.h"

using namespace std;

//[문제] 파일 "점수.txt" 에는 학생 100명의 C++점수가 저장되어 있다.
// 평균점수를 계산하여 화면에 출력하라.



int main()
{	
	ifstream in{ "점수.txt" };
	int sum{};
	for (int  i = 0; i < 100; i++)
	{
		int num;
		in >> num;
		sum += num;
	}
	cout << "평균값-" << sum / 100.0 << endl;
	save("1.cpp");
}
------------------------------------------------
저장시간 - 2022-03-19 오후 7:35:54 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 1일차                       
//
//공부할 내용  - 자료형, 변수, 파일에 읽고쓰기, 정렬, 랜덤값 생성, 지역변수
// 
// 지역변수의 크기한계  - default 1Mb
// 전역변수의 크기한계 - OS(운영체제)가 제공하는 만큼.
// C++은 자료를 어떻게 정렬한가
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

// [문제] 2, 1 이 출력되도록 함수를 만들어 호출하라. (10분)

void f(int*, int*);

int main()
{	
	int a{ 1 }, b{ 2 };
	//여기에서 내가 만든 함수를 호출하였다.
	f(&a,&b);

	cout << a << "," << b << endl;
	save("1.cpp");
}
void f(int *a, int *b)
{
	int temp{ *a };
	*a = *b;
	*b = temp;

}------------------------------------------------
저장시간 - 2022-03-19 오후 7:59:32 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 2일차                       
//
//공부할 내용  - 
// C++은 자료를 어떻게 정렬하는가?
// 
//		-두 값을 교환할 수 있는 함수를 작성하라 - 포인터로 해결해야.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

// [문제] 2, 1 이 출력되도록 함수를 만들어 호출하라. (10분)

void f(int*, int*); // function declaration

int main()
{	
	int a{ 1 }, b{ 2 }; 
	cout << &a << &b;

	//여기에서 내가 만든 함수를 호출하였다.
	f(&a,&b);

	cout << a << "," << b << endl;
	save("1.cpp");
}
void f(int *a, int *b) // function definition
{
	int temp{ *a };
	*a = *b;
	*b = temp;
} ------------------------------------------------
저장시간 - 2022-03-19 오후 8:03:38 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 2일차                       
//
//공부할 내용  - 
// C++은 자료를 어떻게 정렬하는가?
// 
//		-두 값을 교환할 수 있는 함수를 작성하라 - 포인터로 해결해야.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;


int main()
{	
	// C/ C++ 언어에서 포인터 설명

	int num{ 10 };

	cout << num << endl;

	int* p = &num;
	*p = 123;

	cout << num << endl;
	save("1.cpp");
}

------------------------------------------------
저장시간 - 2022-03-19 오후 8:11:45 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 2일차                       
//
//공부할 내용  - 
// C++은 자료를 어떻게 정렬하는가?
// 
//		-두 값을 교환할 수 있는 함수를 작성하라 - 포인터로 해결해야.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

void f(int*);
void f(int* p)
{
	*p *= 2;
}

int main()
{	
	int num{ 10 };
	f(&num);
	cout << num << endl;
	save("1.cpp");
}

------------------------------------------------
저장시간 - 2022-03-19 오후 8:12:11 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 2일차                       
//
//공부할 내용  - 
// C++은 자료를 어떻게 정렬하는가?
// 
//		-두 값을 교환할 수 있는 함수를 작성하라 - 포인터로 해결해야.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

void f(int);
void f(int p)
{
	p *= 2;
}

int main()
{	
	int num{ 10 };
	
	f(num);

	cout << num << endl;
	save("1.cpp");
}

------------------------------------------------
저장시간 - 2022-03-19 오후 8:15:01 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 2일차                       
//
//공부할 내용  - 
// C++은 자료를 어떻게 정렬하는가?
// 
//		-두 값을 교환할 수 있는 함수를 작성하라 - 포인터로 해결해야.
//		-포인터를 사용하는 이유는?
//			-한 지역에서 다른 지역의 데이터를 원격조작하기 위해 사용한다.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

void f(int*);
void f(int* p)
{
	*p *= 2;
}
// 포인터의 역할 -- 한 지역에서 다른 지역에 있는 메모리에 access하기 위한 도구.

int main()
{	
	int num{ 10 };
	f(&num);
	cout << num << endl;
	save("1.cpp");
}

------------------------------------------------
저장시간 - 2022-03-19 오후 8:18:00 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 2일차                       
//
//공부할 내용  - 
// C++은 자료를 어떻게 정렬하는가?
// 
//		-두 값을 교환할 수 있는 함수를 작성하라 - 포인터로 해결해야.
//		-포인터를 사용하는 이유는?
//			-한 지역에서 다른 지역의 데이터를 원격조작하기 위해 사용한다.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

//C++에서 두 값을 교환하는 방법
void change(int*, int*);

int main()
{	
	int a{ 10 }, b{ 20 };

	change(&a, &b);

	cout << a << "," << b << endl;

	save("1.cpp");
}

void change(int* p, int* q)
{
	int temp{ *p };

	*p = *q;
	*q = temp;

}
------------------------------------------------
저장시간 - 2022-03-19 오후 8:19:46 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 2일차                       
//
//공부할 내용  - 
// C++은 자료를 어떻게 정렬하는가?
// 
//		-두 값을 교환할 수 있는 함수를 작성하라 - 포인터로 해결해야.
//		-포인터를 사용하는 이유는?
//			-한 지역에서 다른 지역의 데이터를 원격조작하기 위해 사용한다.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

//C++에서 두 값을 교환하는 방법 -- reference(참조)를 사용하여 해결한다.
void change(int*, int*);

int main()
{	
	{
		int a{ 3 };

		int& r = a;
		r = 333;

		cout << "a의 값 - " << a << endl;
	}

	int a{ 10 }, b{ 20 };

	change(&a, &b);

	cout << a << "," << b << endl;

	save("1.cpp");
}

void change(int* p, int* q)
{
	int temp{ *p };

	*p = *q;
	*q = temp;

}
------------------------------------------------
저장시간 - 2022-03-19 오후 8:22:53 토요일
//-------------------------------------------------------------------------------------------------
//                                                            3주 2일차                       
//
//공부할 내용  - 
// C++은 자료를 어떻게 정렬하는가?
// 
//		-두 값을 교환할 수 있는 함수를 작성하라 - 포인터로 해결해야.
//		-포인터를 사용하는 이유는?
//			-한 지역에서 다른 지역의 데이터를 원격조작하기 위해 사용한다.
//-------------------------------------------------------------------------------------------------

#include<iostream>
#include"save.h"
using namespace std;

//C++에서 두 값을 교환하는 방법 -- reference(참조)를 사용하여 해결한다.
void change(int&, int&);

void change(int& p, int& q)
{
	int temp{ p };

	p = q;
	q = temp;

}

int main()
{	

	int a{ 10 }, b{ 20 };

	change(a, b);

	cout << a << "," << b << endl;

	save("1.cpp");
}
